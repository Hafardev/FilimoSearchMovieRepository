plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
}

def config = getRootProject().extensions.getByName("ext")

android {
    namespace 'com.filimo.searchmovie'
    compileSdk config.android.compileSdkVersion

    defaultConfig {
        applicationId config.android.applicationId
        minSdk config.android.minSdkVersion
        targetSdk config.android.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

kapt {
    correctErrorTypes = true
}


dependencies {

    implementation project(path: ':domain')
    implementation project(path: ':data')

    println("\r\n------ $project.name module dependecies ------")
    config.presentationDep.get().each {
        obj ->
            println("$obj")
            if (obj.requiredVersion != null) {
                add("${obj.type}", obj.url) {
                    version {
                        strictly "$requiredVersion"
                    }
                }
            } else {
                add("${obj.type}", obj.url)
            }
    }
    implementation fileTree(dir: "libs", include: ["*.jar"])
}

def handleAppName(String flavor) {
    def isDebugVersion = getGradle().startParameter.taskNames.any { it.toLowerCase().contains("debug") } ? true : false
    return isDebugVersion ? ".$flavor" : ""
}
